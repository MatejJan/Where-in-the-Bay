// Generated by CoffeeScript 1.10.0
(function() {
  var camera, controls, dataGrid, draw, ocean, onWindowResize, renderer, scene, sun, terrain, terrainSize;

  renderer = new THREE.WebGLRenderer({
    antialias: true
  });

  renderer.setClearColor(0x424254);

  renderer.setPixelRatio(devicePixelRatio);

  document.body.appendChild(renderer.domElement);

  terrainSize = 10000;

  camera = new THREE.PerspectiveCamera(50, window.innerWidth / window.innerHeight, terrainSize * 0.01, terrainSize * 10);

  camera.position.set(terrainSize, terrainSize * 0.7, terrainSize);

  camera.lookAt(new THREE.Vector3(0, 0, 0));

  scene = new THREE.Scene();

  scene.add(new THREE.AmbientLight(0x424254 * 2));

  sun = new THREE.DirectionalLight(0xffffff, 1.5);

  sun.position.set(-2, 2, 0.5);

  scene.add(sun);

  ocean = new Ocean(renderer, camera, sun, scene, terrainSize);

  dataGrid = null;

  terrain = new Terrain(terrainSize, function(mesh) {
    mesh.position.set(-terrain.size * 0.5, 0, -terrain.size * 0.5);
    scene.children[0].add(mesh);
    return dataGrid = new DataGrid(scene.children[0], terrain);
  });

  controls = new THREE.OrbitControls(camera, renderer.domElement);

  controls.enableDamping = true;

  controls.dampingFactor = 0.25;

  controls.enableKeys = false;

  controls.maxPolarAngle = Math.PI / 2.1;

  onWindowResize = function() {
    camera.aspect = window.innerWidth / window.innerHeight;
    camera.setViewOffset(window.innerWidth * 1.15, window.innerHeight * 1.05, 0, window.innerHeight * 0.05, window.innerWidth, window.innerHeight);
    camera.updateProjectionMatrix();
    return renderer.setSize(window.innerWidth, window.innerHeight);
  };

  onWindowResize();

  window.addEventListener('resize', onWindowResize, false);

  draw = function() {
    requestAnimationFrame(draw);
    if (dataGrid != null) {
      dataGrid.update();
    }
    scene.updateMatrixWorld();
    renderer.clear();
    if (ocean) {
      ocean.draw();
    }
    return renderer.render(scene, camera);
  };

  draw();

  window.renderer = renderer;

  window.camera = camera;

  window.scene = scene;

}).call(this);

//# sourceMappingURL=bay.js.map
