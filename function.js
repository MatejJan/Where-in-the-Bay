// Generated by CoffeeScript 1.10.0
(function() {
  window.Function = (function() {
    function Function(options) {
      var $canvas, $checkbox, $function, $graph, $header, base, base1, base2;
      this.options = options;
      if ((base = this.options).enabled == null) {
        base.enabled = false;
      }
      if ((base1 = this.options).desiredValue == null) {
        base1.desiredValue = 1;
      }
      if ((base2 = this.options).desiredWeight == null) {
        base2.desiredWeight = 1;
      }
      $function = $('<div class="function">');
      $header = $("<label class='name'>");
      $function.append($header);
      $graph = $("<div class='graph-area'><canvas class='graph'></canvas></div>");
      $function.append($graph);
      if (!this.options.enabled) {
        $graph.hide();
      }
      $canvas = $graph.find('canvas');
      this.canvas = $canvas[0];
      this.context = this.canvas.getContext('2d');
      $canvas.click((function(_this) {
        return function(event) {
          var height, width;
          width = $(event.target).width();
          height = $(event.target).height();
          _this.options.desiredValue = event.offsetX / width;
          _this.options.desiredWeight = 1 - event.offsetY / height;
          return _this.updateGraph();
        };
      })(this));
      $checkbox = $("<input type='checkbox' " + (this.options.enabled ? 'checked' : '') + "/>");
      $checkbox.change((function(_this) {
        return function(event) {
          _this.options.enabled = $header.find('input').prop('checked');
          _this.updateGraph();
          if (_this.options.enabled) {
            return $graph.show();
          } else {
            return $graph.hide();
          }
        };
      })(this));
      $header.click((function(_this) {
        return function(event) {
          if (!event.shiftKey) {
            return;
          }
          $('.functions input').prop('checked', false).change();
          return $header.find('input').prop('checked', true).change();
        };
      })(this));
      $header.append($checkbox);
      $header.append(this.options.name);
      $('.functions').append($function);
      this.updateGraph();
    }

    Function.prototype.updateGraph = function() {
      var i, j;
      this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);
      this.context.strokeStyle = 'white';
      this.context.beginPath();
      this.context.moveTo(0, this.canvas.height * (1 - this.options.desiredWeight * this.functionAt(0)));
      for (i = j = 1; j <= 100; i = ++j) {
        this.context.lineTo(i / 100 * this.canvas.width, this.canvas.height * (1 - this.options.desiredWeight * this.functionAt(i / 100)));
      }
      return this.context.stroke();
    };

    Function.prototype.functionAt = function(value) {
      if (!this.options.enabled) {
        return 0;
      }
      return Math.pow(Math.sin((value - (1 + this.options.desiredValue)) * Math.PI / 2), 2);
    };

    Function.prototype.valueAt = function(x, y) {
      return this.functionAt(this.options.data.valueAt(x, y));
    };

    Function.prototype.weight = function() {
      if (!this.options.enabled) {
        return 0;
      }
      return this.options.desiredWeight;
    };

    return Function;

  })();

}).call(this);

//# sourceMappingURL=function.js.map
